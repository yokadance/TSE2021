<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.example</groupId>
        <artifactId>vacunas.uy_grupo16</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>vacunas.uy_grupo16-ear</artifactId>
    <packaging>ear</packaging>
    <name>vacunas.uy_grupo16 - ear</name>
    <description>This is the EAR POM file</description>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vacunas.uy_grupo16-ejb</artifactId>
            <type>ejb</type>
        </dependency>

        <!-- Depend on the EJB module and WAR so that we can package them -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vacunas.uy_grupo16-web</artifactId>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vacunas.uy_grupo16-api</artifactId>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>2.1.7</version>
        </dependency>



    </dependencies>

    <build>
        <finalName>${project.parent.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <!-- put your configurations here -->
                </configuration>
            </plugin>

            <!--EAR plugin: format of output file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <version>${version.ear.plugin}</version>
                <configuration>
                    <unpackTypes>war,ejb</unpackTypes>
                    <finalName>${project.parent.artifactId}</finalName>
                    <!-- Tell Maven we are using Jakarta EE -->
                    <version>8</version>
                    <!-- Use Jakarta EE ear libraries as needed. Jakarta EE ear libraries
                        are in easy way to package any libraries needed in the ear, and automatically
                        have any modules (EJB-JARs and WARs) use them -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <skinnyWars>true</skinnyWars>
                    <modules>
                        <!-- Default context root of the web app is /vacunas.uy_grupo16-web.
                            If a custom context root is needed, uncomment the following snippet to
                            register our War as a web module and set the contextRoot property -->

                        <webModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>vacunas.uy_grupo16-web</artifactId>
                            <contextRoot>/VacunasUYG16</contextRoot>
                        </webModule>

                        <webModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>vacunas.uy_grupo16-api</artifactId>
                            <contextRoot>/VacunasUYG16-api</contextRoot>
                        </webModule>

                        <ejbModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>vacunas.uy_grupo16-ejb</artifactId>
                        </ejbModule>

                    </modules>
                    <outputFileNameMapping>@{artifactId}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
                </configuration>
            </plugin>
            <!-- The WildFly plug-in deploys your ear to a local WildFly / JBoss EAP container.
                Due to Maven's lack of intelligence with EARs we need to configure
                the WildFly Maven plug-in to skip deployment for all modules. We then enable
                it specifically in the ear module. -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- compiler plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin-version}</version>
                    <configuration>
                        <source>${java-version}</source>
                        <target>${java-version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- maven ear plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${ear-plugin-version}</version>

                    <configuration>
                        <version>5</version>
                        <defaultJavaBundleDir>lib/</defaultJavaBundleDir>
                        <applicationXml>${project.build.directory}/application.xml</applicationXml>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                        <!--                        <jboss>-->
                        <!--&lt;!&ndash;                            <version>5</version>&ndash;&gt;-->
                        <!--                            &lt;!&ndash; Fait en sorte que que l'application ait son propre UnifiedLoaderRepository (ULR) &ndash;&gt;-->
                        <!--                            &lt;!&ndash; Le déploiement de l'EAR est dit "scoped" &ndash;&gt;-->
                        <!--                            <loader-repository>-->
                        <!--                                jboss.loader:loader=${project.groupId}-${application.id}-${project.version}-->
                        <!--                            </loader-repository>-->
                        <!--                            &lt;!&ndash; Le flag Java2ParentDelegation est désactivé afin que les classes soient en priorité-->
                        <!--                              chargées à partir des libs de l'EAR &ndash;&gt;-->
                        <!--                            &lt;!&ndash;loader-repository-config>java2ParentDelegation=true</loader-repository-config&ndash;&gt;-->
                        <!--                            <loader-repository-config>java2ParentDelegation=false</loader-repository-config>-->
                        <!--                        </jboss>-->
                    </configuration>

                </plugin>
                <!-- ejb plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${ejb-plugin-version}</version>
                    <configuration>
                        <ejbVersion>${ejb-spec-version}</ejbVersion>
                    </configuration>
                </plugin>
                <!-- war plugin -skinny wars mode! -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${war-plugin-version}</version>
                    <configuration>
                        <skinnyWars>true</skinnyWars>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <!-- All the modules that require nothing but WildFly /JBoss EAP -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your WildFly / JBoss EAP instance.
                 This profile will start a new WildFly / JBoss EAP instance, and execute the test, shutting it down when done.
                 Run with: mvn clean verify -Parq-managed -->
            <id>arq-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.failsafe.plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- Configuration for Arquillian: -->
                            <systemPropertyVariables>
                                <!-- Defines the container qualifier in "arquillian.xml" -->
                                <arquillian.launch>managed</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote WildFly / JBoss EAP instance.
                 Run with: mvn clean verify -Parq-remote -->
            <id>arq-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.failsafe.plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- Configuration for Arquillian: -->
                            <systemPropertyVariables>
                                <!-- Defines the container qualifier in "arquillian.xml" -->
                                <arquillian.launch>remote</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement/>



</project>
